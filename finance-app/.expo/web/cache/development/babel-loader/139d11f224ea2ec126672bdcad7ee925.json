{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { createContext, useContext, useState } from \"react\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { db } from \"../components/firebase-config\";\nimport AuthContext from \"./AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar TransactionContext = createContext();\nexport var TransactionProvider = function TransactionProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      transactions = _useState2[0],\n      setTransactions = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      transactLoading = _useState4[0],\n      setTransactLoading = _useState4[1];\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var getTransactions = function _callee() {\n    var transactionQuery, data, getData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setTransactLoading(true);\n            transactionQuery = query(collection(db, \"userTransactionTable\"), where(\"userID\", \"==\", user.uid));\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(getDocs(transactionQuery));\n\n          case 4:\n            data = _context.sent;\n            getData = data.docs.map(function (doc) {\n              return _objectSpread(_objectSpread({}, doc.data()), {}, {\n                id: doc.id\n              });\n            });\n            setTransactions(getData);\n            setTransactLoading(false);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(TransactionContext.Provider, {\n    value: {\n      transactions: transactions,\n      transactLoading: transactLoading,\n      getTransactions: getTransactions,\n      setTransactLoading: setTransactLoading\n    },\n    children: children\n  });\n};\nexport default TransactionContext;","map":{"version":3,"names":["React","createContext","useContext","useState","collection","getDocs","query","where","db","AuthContext","TransactionContext","TransactionProvider","children","transactions","setTransactions","transactLoading","setTransactLoading","user","getTransactions","transactionQuery","uid","data","getData","docs","map","doc","id"],"sources":["E:/Bohubrihi Full Stack Course/React Native Practice File/finance-app/src/context/TransactionContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport { db } from \"../components/firebase-config\";\r\nimport AuthContext from \"./AuthContext\";\r\n\r\nconst TransactionContext = createContext();\r\n\r\nexport const TransactionProvider = ({ children }) => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [transactLoading, setTransactLoading] = useState(false);\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const getTransactions = async () => {\r\n    setTransactLoading(true);\r\n    const transactionQuery = query(\r\n      collection(db, \"userTransactionTable\"),\r\n      where(\"userID\", \"==\", user.uid)\r\n    );\r\n\r\n    const data = await getDocs(transactionQuery);\r\n    const getData = data.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n    // console.log(getData, user.uid);\r\n    setTransactions(getData);\r\n    setTransactLoading(false);\r\n  };\r\n\r\n  return (\r\n    <TransactionContext.Provider\r\n      value={{\r\n        transactions,\r\n        transactLoading,\r\n        getTransactions,\r\n        setTransactLoading,\r\n      }}\r\n    >\r\n      {children}\r\n    </TransactionContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TransactionContext;\r\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,KAA9B,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SAASC,EAAT;AACA,OAAOC,WAAP;;AAEA,IAAMC,kBAAkB,GAAGT,aAAa,EAAxC;AAEA,OAAO,IAAMU,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EACnD,gBAAwCT,QAAQ,CAAC,EAAD,CAAhD;EAAA;EAAA,IAAOU,YAAP;EAAA,IAAqBC,eAArB;;EACA,iBAA8CX,QAAQ,CAAC,KAAD,CAAtD;EAAA;EAAA,IAAOY,eAAP;EAAA,IAAwBC,kBAAxB;;EACA,kBAAiBd,UAAU,CAACO,WAAD,CAA3B;EAAA,IAAQQ,IAAR,eAAQA,IAAR;;EAEA,IAAMC,eAAe,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YACtBF,kBAAkB,CAAC,IAAD,CAAlB;YACMG,gBAFgB,GAEGb,KAAK,CAC5BF,UAAU,CAACI,EAAD,EAAK,sBAAL,CADkB,EAE5BD,KAAK,CAAC,QAAD,EAAW,IAAX,EAAiBU,IAAI,CAACG,GAAtB,CAFuB,CAFR;YAAA;YAAA,iCAOHf,OAAO,CAACc,gBAAD,CAPJ;;UAAA;YAOhBE,IAPgB;YAQhBC,OARgB,GAQND,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAc,UAACC,GAAD;cAAA,uCAAeA,GAAG,CAACJ,IAAJ,EAAf;gBAA2BK,EAAE,EAAED,GAAG,CAACC;cAAnC;YAAA,CAAd,CARM;YAUtBZ,eAAe,CAACQ,OAAD,CAAf;YACAN,kBAAkB,CAAC,KAAD,CAAlB;;UAXsB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAxB;;EAcA,OACE,KAAC,kBAAD,CAAoB,QAApB;IACE,KAAK,EAAE;MACLH,YAAY,EAAZA,YADK;MAELE,eAAe,EAAfA,eAFK;MAGLG,eAAe,EAAfA,eAHK;MAILF,kBAAkB,EAAlBA;IAJK,CADT;IAAA,UAQGJ;EARH,EADF;AAYD,CA/BM;AAiCP,eAAeF,kBAAf"},"metadata":{},"sourceType":"module"}