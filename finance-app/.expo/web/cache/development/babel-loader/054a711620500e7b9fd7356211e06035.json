{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var AddTransaction = function AddTransaction() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      amount = _useState4[0],\n      setAmount = _useState4[1];\n\n  var onSubmit = function onSubmit(e) {};\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Text, {\n      style: [styles.sectionTitle, styles.h3],\n      children: \"Add new transaction\"\n    }), _jsxs(View, {\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Text\"\n        }), _jsx(TextInput, {\n          style: [styles.input],\n          onChangeText: setText,\n          value: text,\n          placeholder: \"Enter text...\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsxs(Text, {\n          style: styles.label,\n          children: [\"amount\", \"\\n\", \"(negative - expense, positive - income)\"]\n        }), _jsx(TextInput, {\n          style: [styles.input],\n          keyboardType: \"numeric\",\n          onChangeText: function onChangeText() {\n            return setAmount(e.target.value);\n          },\n          value: amount,\n          placeholder: \"Enter amount...\"\n        })]\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","useContext","styles","AddTransaction","text","setText","amount","setAmount","onSubmit","e","sectionTitle","h3","label","input","target","value"],"sources":["E:/Bohubrihi Full Stack Course/React Native Practice File/finance-app/src/components/AddTransaction.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { Text, TextInput, View } from \"react-native\";\r\nimport { styles } from \"./styles\";\r\n// import { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  // const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = (e) => {\r\n    // e.preventDefault();\r\n    // const newTransaction = {\r\n    // \tid: Math.floor(Math.random() * 100000000),\r\n    // \ttext,\r\n    // \tamount: +amount,\r\n    // };\r\n    // addTransaction(newTransaction);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Text style={[styles.sectionTitle, styles.h3]}>Add new transaction</Text>\r\n      <View>\r\n        <View>\r\n          <Text style={styles.label}>Text</Text>\r\n          <TextInput\r\n            style={[styles.input]}\r\n            onChangeText={setText}\r\n            value={text}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </View>\r\n        <View>\r\n          <Text style={styles.label}>\r\n            amount{\"\\n\"}(negative - expense, positive - income)\r\n          </Text>\r\n          <TextInput\r\n            style={[styles.input]}\r\n            keyboardType=\"numeric\"\r\n            onChangeText={() => setAmount(e.target.value)}\r\n            value={amount}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </View>\r\n      </View>\r\n      {/* <form onSubmit={onSubmit}>\r\n\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t<label htmlFor='text'>Text</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\tplaceholder='Enter text...'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t<label htmlFor='amount'>\r\n\t\t\t\t\t\tAmount <br />\r\n\t\t\t\t\t\t(negative - expense, positive - income)\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={amount}\r\n\t\t\t\t\t\tonChange={(e) => setAmount(e.target.value)}\r\n\t\t\t\t\t\tplaceholder='Enter amount...'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className='btn'>Add transaction</button>\r\n\t\t\t</form> */}\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;;;;AAEA,SAASC,MAAT;;;;AAGA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;EAClC,gBAAwBH,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOI,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAA4BL,QAAQ,CAAC,CAAD,CAApC;EAAA;EAAA,IAAOM,MAAP;EAAA,IAAeC,SAAf;;EAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO,CAQvB,CARD;;EAUA,OACE;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAE,CAACP,MAAM,CAACQ,YAAR,EAAsBR,MAAM,CAACS,EAA7B,CAAb;MAAA;IAAA,EADF,EAEE,MAAC,IAAD;MAAA,WACE,MAAC,IAAD;QAAA,WACE,KAAC,IAAD;UAAM,KAAK,EAAET,MAAM,CAACU,KAApB;UAAA;QAAA,EADF,EAEE,KAAC,SAAD;UACE,KAAK,EAAE,CAACV,MAAM,CAACW,KAAR,CADT;UAEE,YAAY,EAAER,OAFhB;UAGE,KAAK,EAAED,IAHT;UAIE,WAAW,EAAC;QAJd,EAFF;MAAA,EADF,EAUE,MAAC,IAAD;QAAA,WACE,MAAC,IAAD;UAAM,KAAK,EAAEF,MAAM,CAACU,KAApB;UAAA,qBACS,IADT;QAAA,EADF,EAIE,KAAC,SAAD;UACE,KAAK,EAAE,CAACV,MAAM,CAACW,KAAR,CADT;UAEE,YAAY,EAAC,SAFf;UAGE,YAAY,EAAE;YAAA,OAAMN,SAAS,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV,CAAf;UAAA,CAHhB;UAIE,KAAK,EAAET,MAJT;UAKE,WAAW,EAAC;QALd,EAJF;MAAA,EAVF;IAAA,EAFF;EAAA,EADF;AAqDD,CArEM"},"metadata":{},"sourceType":"module"}